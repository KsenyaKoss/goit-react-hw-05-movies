{"version":3,"file":"static/js/797.da90222f.chunk.js","mappings":"sMAkDA,UA5CmB,WACjB,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SACzBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACHJ,IAGLK,EAAAA,EAAAA,IAAkBL,GAAOM,KAAKV,EAC/B,GAAE,CAACI,IAQJ,OACE,iCACE,kBAAMO,SARW,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACfZ,EAAgB,CAAEC,MAAOU,EAAKE,SAASC,OAAOC,QAC9CJ,EAAKK,OACN,EAGG,WACE,kBAAOC,KAAK,OAAOC,KAAK,YACxB,mBAAQD,KAAK,SAAb,uBAEDhB,IACC,gCACG,KACD,wBACGL,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,UAAKD,GAAME,MAAO,CAACC,KAAMrB,GAAjC,SAA6CiB,KADtCC,EADC,UASlB,SAAC,KAAD,MAGL,C,+LC7CKI,EAAG,+BACHC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACcC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAgDC,IAD9D,cACCG,EADD,OAECC,EAAiBD,EAAKA,KAAKE,QAF5B,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BX,GAA9B,yFACcO,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BJ,EAA1B,oBAAwCK,IADtD,cACCG,EADD,OAECI,EAAQJ,EAAKA,KAFd,kBAGEI,GAHF,kEAMA,SAAe3B,EAAtB,+CAAO,OAAP,oBAAO,WAAiCL,GAAjC,yFAEc2B,EAAAA,EAAAA,IAAA,UACdH,EADc,+BACYxB,EADZ,oBAC6ByB,IAH3C,cAECG,EAFD,OAKCK,EAAcL,EAAKA,KAAKE,QALzB,kBAMEG,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bd,GAA9B,yFACcO,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BJ,EAA1B,4BAAgDK,IAD9D,cACCG,EADD,OAECO,EAAcP,EAAKA,KAAKQ,KAFzB,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCjB,GAAjC,yFACcO,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BJ,EAA1B,4BAAgDK,IAD9D,cACCG,EADD,OAECU,EAAeV,EAAKA,KAAKE,QAF1B,kBAGEQ,GAHF,kE","sources":["pages/MoviesPage.jsx","servicesAPI/fetchMovies.js"],"sourcesContent":["import { Link, Outlet, useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { fetchMovieByQuery } from '../servicesAPI/fetchMovies';\nimport PropTypes from 'prop-types'\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const location = useLocation()\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    fetchMovieByQuery(query).then(setMovies);\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.search.value });\n    form.reset();\n  };\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input type=\"text\" name=\"search\" />\n        <button type=\"submit\">Search</button>\n      </form>\n      {query && (\n        <>\n          {' '}\n          <ul>\n            {movies.map(({ title, id }) => (\n              <li key={id}>\n                <Link to={`${id}`} state={{from: location}}>{title}</Link>\n              </li>\n            ))}\n          </ul>\n        </>\n      )}\n\n      <Outlet />\n    </>\n  );\n};\n\n\nexport default MoviesPage\n\n\nMoviesPage.propTypes =  {\n  movies: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number, \n})\n}","import axios from 'axios';\n\nconst URL = `https://api.themoviedb.org/3`;\nconst KEY = '27391c24609865799e74cd8cabdef0e3';\n\nexport async function fetchTrendingMovies() {\n  const data = await axios.get(`${URL}/trending/movie/week?api_key=${KEY}`);\n  const trendingMovies = data.data.results;\n  return trendingMovies;\n}\n\nexport async function fetchMovieById(id) {\n  const data = await axios.get(`${URL}/movie/${id}?api_key=${KEY}`);\n  const movie = data.data;\n  return movie;\n}\n\nexport async function fetchMovieByQuery(query) {\n  // /search/movie?api_key=<<api_key>>\n  const data = await axios.get(\n    `${URL}/search/movie?query=${query}&api_key=${KEY}`\n  );\n  const queryMovies = data.data.results;\n  return queryMovies;\n}\n\nexport async function fetchMovieCast(id) {\n  const data = await axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n  const castOfMovie = data.data.cast;\n  return castOfMovie;\n}\n\nexport async function fetchMovieReviews(id) {\n  const data = await axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n  const reviewsMovie = data.data.results;\n  return reviewsMovie;\n}\n"],"names":["useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","fetchMovieByQuery","then","onSubmit","e","preventDefault","form","currentTarget","elements","search","value","reset","type","name","map","title","id","to","state","from","URL","KEY","fetchTrendingMovies","axios","data","trendingMovies","results","fetchMovieById","movie","queryMovies","fetchMovieCast","castOfMovie","cast","fetchMovieReviews","reviewsMovie"],"sourceRoot":""}