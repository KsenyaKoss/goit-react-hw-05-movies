{"version":3,"file":"static/js/649.95c98625.chunk.js","mappings":"8LAgCA,UA1BuB,WACrB,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GAOR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAkBH,GAAII,KAAKL,EAC5B,GAAE,CAACC,KAGJ,8BACsB,IAAnBF,EAAQO,QAAe,gEACtB,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAUR,EAArB,EAAqBA,GAArB,OACT,2BAEI,qCAAaO,MACb,uBAAIC,MAHCR,EADA,OAWpB,C,+LC5BKS,EAAG,+BACHC,EAAM,mCAEL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACcC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,wCAAgDC,IAD9D,cACCG,EADD,OAECC,EAAiBD,EAAKA,KAAKE,QAF5B,kBAGED,GAHF,kEAMA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BhB,GAA9B,yFACcY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BT,EAA1B,oBAAwCU,IADtD,cACCG,EADD,OAECI,EAAQJ,EAAKA,KAFd,kBAGEI,GAHF,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,yFAEcP,EAAAA,EAAAA,IAAA,UACdH,EADc,+BACYU,EADZ,oBAC6BT,IAH3C,cAECG,EAFD,OAKCO,EAAcP,EAAKA,KAAKE,QALzB,kBAMEK,GANF,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BrB,GAA9B,yFACcY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BT,EAA1B,4BAAgDU,IAD9D,cACCG,EADD,OAECS,EAAcT,EAAKA,KAAKU,KAFzB,kBAGED,GAHF,kEAMA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAiCH,GAAjC,yFACcY,EAAAA,EAAAA,IAAA,UAAaH,EAAb,kBAA0BT,EAA1B,4BAAgDU,IAD9D,cACCG,EADD,OAECW,EAAeX,EAAKA,KAAKE,QAF1B,kBAGES,GAHF,kE","sources":["components/Reviews/ReviewsDetails.jsx","servicesAPI/fetchMovies.js"],"sourcesContent":["import { fetchMovieReviews } from 'servicesAPI/fetchMovies';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types'\n\n\nconst ReviewsDetails = () => {\n  const [reviews, setReviews] = useState([]);\n  const { id } = useParams();\n  \n\n  useEffect(() => {\n    fetchMovieReviews(id).then(setReviews);\n  }, [id]);\n\n  return (\n  <>\n    {reviews.length === 0 ? <h3>There is no reviews for this movie</h3>  :\n    ( <ul>\n        {reviews.map(({ author, content,  id }) => \n            <li key={id}>\n    \n                <h4>Author: {author}</h4>\n                <p>{content}</p>\n  </li>\n)}\n    </ul>)  }\n</>\n\n)\n};\n\nexport default ReviewsDetails\n\n\nReviewsDetails.propTypes =  {\n  reviews: PropTypes.shape({\n    author: PropTypes.string,\n    id: PropTypes.number, \n    content: PropTypes.string, \n  })\n}","import axios from 'axios';\n\nconst URL = `https://api.themoviedb.org/3`;\nconst KEY = '27391c24609865799e74cd8cabdef0e3';\n\nexport async function fetchTrendingMovies() {\n  const data = await axios.get(`${URL}/trending/movie/week?api_key=${KEY}`);\n  const trendingMovies = data.data.results;\n  return trendingMovies;\n}\n\nexport async function fetchMovieById(id) {\n  const data = await axios.get(`${URL}/movie/${id}?api_key=${KEY}`);\n  const movie = data.data;\n  return movie;\n}\n\nexport async function fetchMovieByQuery(query) {\n  // /search/movie?api_key=<<api_key>>\n  const data = await axios.get(\n    `${URL}/search/movie?query=${query}&api_key=${KEY}`\n  );\n  const queryMovies = data.data.results;\n  return queryMovies;\n}\n\nexport async function fetchMovieCast(id) {\n  const data = await axios.get(`${URL}/movie/${id}/credits?api_key=${KEY}`);\n  const castOfMovie = data.data.cast;\n  return castOfMovie;\n}\n\nexport async function fetchMovieReviews(id) {\n  const data = await axios.get(`${URL}/movie/${id}/reviews?api_key=${KEY}`);\n  const reviewsMovie = data.data.results;\n  return reviewsMovie;\n}\n"],"names":["useState","reviews","setReviews","id","useParams","useEffect","fetchMovieReviews","then","length","map","author","content","URL","KEY","fetchTrendingMovies","axios","data","trendingMovies","results","fetchMovieById","movie","fetchMovieByQuery","query","queryMovies","fetchMovieCast","castOfMovie","cast","reviewsMovie"],"sourceRoot":""}